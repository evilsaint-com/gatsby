{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/reporting-in-english-for-non-natives/","result":{"pageContext":{"post":{"fields":{"slug":"/reporting-in-english-for-non-natives"},"excerpt":"When looking at the analytics for evilsaint.com, it always surprises me just how wide an audience this website receives! As a native English…","frontmatter":{"date":"7th January 2022 ","title":"Reporting in English for non-natives","description":"Reporting in English for non-natives","tags":"reporting","posttype":"blog"},"body":"When looking at the analytics for evilsaint.com, it always surprises me just how wide an audience this website receives! As a native English speaker who dropped foreign language study at the earliest opportunity school presented, I am amazed at the number of people around the world who take time to read what I post. \n\nI recently was involved in a panel discussing report writing and some of the associated challenges that people face; we talked at length about many topics from learning difficulties, physical handicaps, educational issues, and language comprehension. \n\nWhile the panel discussions sparked many topics, one particular interesting share of note (or at least I felt so), was from a non-native English speaker who has been writing penetration testing reports in English for over six years. \n\nThis person gave the perspective of how they write reports, stating that they often make mistakes when they try and do literal translations from their native language into English. They gave examples and pointed out commonly confused items. Upon asking how they circumvented this problem, they directed me to a resource online which I will now share with you (Please see references below)\n\nThis document has assembled many misused English words and expressions that have appeared in EU publications and discusses the correct usage. Even if English is your native language, you might learn something, and I encourage you to do so."},"prev":{"fields":{"slug":"/git-error-fatal-protocol-error-bad-line-length-character"},"excerpt":"On the weekend I ran into an problem with Git that couldnt debug fatal: protocol error: bad line length character: Warn\n\n\nhttps…","frontmatter":{"date":"5th June 2022 ","title":"Git Error - fatal: protocol error: bad line length character","description":"","tags":"git","posttype":"blog"},"body":"On the weekend I ran into an problem with Git that couldnt debug\n\n```\nfatal: protocol error: bad line length character: Warn\n```\n\n\nhttps://stackoverflow.com/questions/8170436/git-remote-error-fatal-protocol-error-bad-line-length-character-unab"},"next":{"fields":{"slug":"/hashcat-now-offers-auto-detection"},"excerpt":null,"frontmatter":{"date":"2nd October 2021 ","title":"Hashcat Now Offers Auto Detection","description":"The latest edition of Hashcat now has an auto-detect mode built-in. If you pass a hashes file to Hashcat with no additional options, it will try to detect the hash types. It is a new feature, and so you will need a recent copy of Hashcat to utilise this feature.","tags":"hashcat","posttype":"blog"},"body":"I just learnt this from a colleague at work and felt it was worth a share. Hashcat now has auto-detect functionality. Run your Hashcat binary and pass only the hash file, and Hashcat will try and work out the hash types included in the file and give you the mode you need to crack them. \n\n```\nhashcat <hash file>\n```\n\n<figure class=\"figure text-center col-xs-12 col-sm-12 col-lg-12\">\n    <img src=\"/static/394dc713-e2a6-40da-98fa-da8f02387e65.png\" class=\"figure-img img-fluid border border-1 border-dark\" alt=\" \"><figcaption class=\"figure-caption text-center fw-normal\">  </figcaption></figure>\n\nIn the above example, I am using Hashcat version 6.2.4; however, I have been informed that the auto-detect feature was added in Hashcat 6.2.2. \n\nIn the screen capture below, we can see the detected hash types in my file. \n\n<figure class=\"figure text-center col-xs-12 col-sm-12 col-lg-12\">\n    <img src=\"/static/b8ae95f9-fea9-4c82-ad56-1fafef2e84ef.png\" class=\"figure-img img-fluid border border-1 border-dark\" alt=\" \"><figcaption class=\"figure-caption text-center fw-normal\">  </figcaption></figure>\n\nThe orange text indicates that this is a best-effort detection; however, it is correct in my case. The file contains five NTLM hashes."}}},"staticQueryHashes":["310218920"],"slicesMap":{}}