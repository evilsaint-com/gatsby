{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/v-mware-workstation-cannot-connect-to-the-virtual-machine/","result":{"pageContext":{"post":{"fields":{"slug":"/v-mware-workstation-cannot-connect-to-the-virtual-machine"},"excerpt":null,"frontmatter":{"date":"23rd March 2021 ","title":"VMware Workstation cannot connect to the virtual machine","description":"","tags":"vmware, building-labs","posttype":"blog"},"body":"\nHave you ever had this error when trying to start a Virtual Machine?? \n\n<figure class=\"figure text-center col-xs-12 col-sm-12 col-lg-12\">\n  <img src=\"/static/f6bf486c-d485-4ce9-90ab-9edd74ab6198.png\" class=\"img-fluid\" alt=\"VMware Workstation cannot connect to the virtual machine.\">\n  <figcaption class=\"figure-caption text-center fw-normal text-dark\">VMware Workstation cannot connect to the virtual machine.</figcaption>\n</figure>\n\nLet me start this article by saying I love VMware! Like most hackers and penetration testers, I spend most of my day working in various Virtual Machines (VMs). Over time you get to see lots of errors and quirky bugs, and you learn how to fix these issues. Quite often, a colleague will send me a screenshot over the internal comms, asking if I know how to fix a particular issue. To reduce support time and share the wealth with my readers, I have decided that each time I encounter one of these from now on, I will document the fix.  \n\n## The Error\n\n>VMware Workstation cannot connect to the virtual machine. Make sure you have the right to run the program, access all directories the program uses, and access all directories for temporary files. \n\n>The VMware Authorization Service is not running. \n\n## How to fix this?\n\n<h5 class=\"step\">Step 1)</h5> \n\nRight-click on the taskbar and select task manager. \n\n<figure class=\"figure text-center col-xs-12 col-sm-12 col-lg-12\">\n  <img src=\"/static/a0884e80-3f2f-4f17-9a2e-a2df961785f8.png\" class=\"img-fluid\" alt=\"Go to taskmanager.\">\n  <figcaption class=\"figure-caption text-center fw-normal text-dark\">Go to taskmanager.</figcaption>\n</figure>\n\n<h5 class=\"step\">Step 2)</h5>\n\n Kill off any VMware Processes \n\n<figure class=\"figure text-center col-xs-12 col-sm-12 col-lg-12\">\n  <img src=\"/static/4f8d486c-33e4-4692-971f-b65d512dad23.png\" class=\"img-fluid\" alt=\"Kill VMware Processes.\">\n  <figcaption class=\"figure-caption text-center fw-normal text-dark\">Kill VMware Processes.</figcaption>\n</figure>\n\n<h5 class=\"step\">Step 3)</h5>\n\nPress `Win` + `R` and type in `services.msc`\n\n\n<figure class=\"figure text-center col-xs-12 col-sm-12 col-lg-12\">\n  <img src=\"/static/69ee42d4-29b7-410c-8537-532364f6f64d.png\" class=\"img-fluid\" alt=\"Open Up Services.msc.\">\n  <figcaption class=\"figure-caption text-center fw-normal text-dark\">Open Up Services.msc.</figcaption>\n</figure>\n\n<h5 class=\"step\">Step 4)</h5>\n\nStart the \"VMware Authorization Service\"\n\nAll done! You should now be able to login into your Virtual Machin! \n\nIf these steps do not work for you or you encounter a different problem, then please leave a comment. Also, leave a comment if you have a better workaround or you have found a different solution."},"prev":{"fields":{"slug":"/appending-dates-to-filenames-in-cron-jobs"},"excerpt":null,"frontmatter":{"date":"29th March 2021 ","title":"Appending Dates To Filenames in Cron Jobs","description":"","tags":null,"posttype":"blog"},"body":"As a heavy proponent of automation, I constantly use `cron` to schedule tasks. A `cron` is a utility available in Linux that allows you to schedule a command or script to run automatically at a specified time and date. A ___cron job___ is the name for the scheduled task.\n\nSome of the tasks I set up ___cron jobs___ for are deleting temporary files, running commands, synchronise data folders and tasks that email me updates based on various gathered pieces of data. \n\nI plan to do a full article on the `cron` service in the future, but for now, I wanted to cover a recent gotcha I got asked for input into solving. \n\n### How do I append dates to filenames in cron jobs. \n\nSo it is quite common to want to append dates in filenames. We have probably all seen a script such as\n\n```\n:::bash\n#!/bin/bash\n\ntar -cf backup-$(date +%Y-%m-%d-%H%M%S).tar file1.txt file2.txt\n```\n\nThose who don't know [what the `tar` command does](https://linux.die.net/man/1/tar). \n\n> A quick tip - while I don't want to get away from the point of this article, but if you didn't require the hour, minutes and seconds, then we can modify the previous command; using backticks instead of `$()` and using the `date -I` syntax, less typing. See the example below.\n\nThe image below shows a file listing using the  `ls -l` command. The image shows two files called file1.txt and file2.txt, respectively. Using the `tar` and `date` commands, we make a `tar` archive of the two files appended with the date and time at the end of the archive name. \n\nWe then show the listing again, and we can see the creation of `backup-2021-03-27-152146.tar`. Next, we see a variation of command being run using just the `date -I` enclosed in backticks. The output of this does not show the hours, minutes and seconds; however, it is faster to type and has another benefit we will see in a minute.\n\n<figure class=\"figure text-center col-xs-12 col-sm-12 col-lg-12\">\n  <img src=\"/static/63778ef4-da31-464f-8748-397463b45a49.png\" class=\"img-fluid\" alt=\"Appending Dates To Filenames in Cron Jobs\">\n <figcaption class=\"figure-caption text-center fw-normal text-dark\">Appending Dates To Filenames in Cron Jobs.</figcaption>\n</figure>\n\nWe have seen a typical use case of a command that appends the date. Why can't I use this in a cron? Surely we can paste the above example in a script called _mybackupscript.sh_ and run it every minute like the following... right!\n\n```\n:::bash\n# Example of job definition:\n# .---------------- minute (0 - 59)\n# |  .------------- hour (0 - 23)\n# |  |  .---------- day of month (1 - 31)\n# |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...\n# |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat\n# |  |  |  |  |\n# *  *  *  *  * user-name  command to be executed\n*/1  *  *  *  * root /root/mybackupscript.sh\n```\n\n**Wrong** - We can read the manual for the crontab `man 5 crontab` to get our answer.\n\n> The \"sixth\" field (the rest of the line) specifies the command to be run. The entire command portion of the line, up to a newline or a \"%\" character, will be executed by /bin/sh or by the shell specified in the SHELL variable of the cronfile. A \"%\" character in the command, unless escaped with a backslash (\\), will be changed into newline characters, and all data after the first % will be sent to the command as standard input.\n\nSo how do we work around this? \n\nJust as the excerpt says, we escape like so\n\n```\n:::bash\n#!/bin/bash\n\ntar -cf backup-$(date +\\%Y-\\%m-\\%d-\\%H\\%M\\%S).tar file1.txt file2.txt\n```\n\nSo, Saint? Why did you waste time showing us `date -I`.... because it doesn't contain a percentage sign ;-)."},"next":{"fields":{"slug":"/error-dumping-postgres-database"},"excerpt":null,"frontmatter":{"date":"21st March 2021 ","title":"Error Dumping Postgres Database","description":"","tags":"postgres","posttype":"blog"},"body":"\nWhen dumping database\n```\nsudo -u postgres pg_dump database-name  > dump.sql\n```\n\nYou get an error that looks like \n\n<figure class=\"figure text-center col-xs-12 col-sm-12 col-lg-12\">\n<img src=\"/static/532719ab-7409-4371-9037-be1ce0637a23.png\" class=\"img-fluid\" alt=\"perl: warning: Falling back to the standard locale ('c')\">\n  <figcaption class=\"figure-caption text-center fw-normal text-dark\">perl: warning: Falling back to the standard locale ('c').</figcaption>\n</figure>\n\n\nThe fix\n\n```\ndpkg-reconfigure locales\n```\n\nFor completeness, we should also talk about importing a database \n```\nsu postgres\npsql -U postgres  database-name  > dump.sql\n```"}}},"staticQueryHashes":["310218920"],"slicesMap":{}}