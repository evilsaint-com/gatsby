{"componentChunkName":"component---src-templates-blog-post-js","path":"/tutorials/remote-ssh-access-tutorial/","result":{"pageContext":{"post":{"fields":{"slug":"/remote-ssh-access-tutorial"},"excerpt":"Remotely accessing Secure Shell (SSH) Services Generating a New Public Key\n\nssh-keygen -y -f ~/.ssh/id_rsa > ~/.ssh/id_rsa.pub\n\n\n=============â€¦","frontmatter":{"date":"21st March 2021 ","title":"Remote SSH Access tutorial","description":"","tags":"ssh","posttype":"tutorial"},"body":"Remotely accessing Secure Shell (SSH) Services\n\nGenerating a New Public Key\n```\nssh-keygen -y -f ~/.ssh/id_rsa > ~/.ssh/id_rsa.pub\n```\n=========================================== \n\n\nhttps://www.ssh.com/ssh/passphrase"},"prev":{"fields":{"slug":"/rename-a-vmdk-disk-and-associated-files-with-v-mware-virtual-disk-manager"},"excerpt":null,"frontmatter":{"date":"15th April 2021 ","title":"Rename a VMDK disk and associated files with VMware Virtual Disk Manager","description":"","tags":"vmdk, vmware, windows","posttype":"tutorial"},"body":"I have a template Kali Linux Virtual Machine that I keep around in case in case of an unfixable error on my current engagement machine. The filenames inside this folder are quite verbose and are intentional to remind me what platform and version it is come to using the backup. This is fine for keeping backups but due to my OCD, I like to rename my engagement machines. Inside the below explorer window it can look quite daunting seeing all the verbose filenames associated with the machine; many consultants do not attempt to rename their machines in fear of messing them up. After all the machine has many associated files we need to rename. \n\n<figure class=\"figure text-center col-xs-12 col-sm-12 col-lg-12\">\n  <img src=\"/static/2d42660e-1b6f-4ccb-a499-b4ea35c8ad7e.png\" class=\"img-fluid\" alt=\"Explorer Windows Showing our Existing Machine.\">\n<figcaption class=\"figure-caption text-center fw-normal text-dark\">Explorer Windows Showing our Existing Machine.</figcaption>\n</figure>\n\nThe VMware Virtual Disk Manager is a tool that is included with VMware Workstation. \n\n> TLDR - What we are about to do is make a new machine with the exact naming convention and filesystem we want. We will then delete its hard disk drive and using the VMware Virtual Disk Manager tool included with VMware Workstation we will rename (and move) the old disk from the template to match. \n\n> NB - I said we will be renaming and moving the hard disk drive so if you would like to use this baseline in the future then I suggest it is something you keep additional copies of. \n\n\nIt is typically installed into the following folder:\n\n<figure class=\"figure text-center col-xs-12 col-sm-12 col-lg-12\">\n  <img src=\"/static/02a92320-760d-4845-916a-e4edc0ab6fdf.png\" class=\"img-fluid\" alt=\"Explorer window of our old vmware machine with unfriendly name\">\n<figcaption class=\"figure-caption text-center fw-normal text-dark\">Explorer window of our old vmware machine with unfriendly name.</figcaption>\n</figure>\n\n\nThis folder contains lots of files. Check for the presence of the VMware Disk Manager tools by using a wildcard character following some of the initial prefix e.g.  `dir vmware*`\n\n<figure class=\"figure text-center col-xs-12 col-sm-12 col-lg-12\">\n <img src=\"/static/6be777e4-da34-4b67-9528-367bbffcd5cb.png\" class=\"img-fluid\" alt=\"cmd prompt set that the location of 'vmware workstation`\">\n<figcaption class=\"figure-caption text-center fw-normal text-dark\">cmd prompt set that the location of 'vmware workstation`.</figcaption>\n</figure>\n\n\n\nGreat so the tools are present. We want to rename our VMware Virtual Machine contained in the following folder. \n\n<figure class=\"figure text-center col-xs-12 col-sm-12 col-lg-12\">\n <img src=\"/static/2a5184cd-9612-41a4-bee7-12ba20938960.png\" class=\"img-fluid\" alt=\"cmd promp with the `dir vmware*` showing all files begining with vmware\">\n<figcaption class=\"figure-caption text-center fw-normal text-dark\">cmd promp with the `dir vmware*` showing all files begining with vmware`.</figcaption>\n</figure>\n\n\nAs I do not need the VM Image to function from inside VM Workstation I am going to remove the image. Note this does not delete it from the disk. \n\n\n<figure class=\"figure text-center col-xs-12 col-sm-12 col-lg-12\">\n <img src=\"/static/a254b426-3829-407b-8d4c-f7a71bb0ba91.png\" class=\"img-fluid\" alt=\"Explorer title bar navigated to the directory of the machine we are going to be cleaning\">\n<figcaption class=\"figure-caption text-center fw-normal text-dark\">Explorer title bar navigated to the directory of the machine we are going to be cleaning.</figcaption>\n</figure>\n\nNext, I am going to install a new VM in a directory with the desired name in my desired location. \n\n<figure class=\"figure text-center col-xs-12 col-sm-12 col-lg-12\">\n <img src=\"/static/0dd01745-5d59-4429-8564-dcc8d3cb1ebf.png\" class=\"img-fluid\" alt=\"New Virtual Machine Wizard\">\n<figcaption class=\"figure-caption text-center fw-normal text-dark\">New Virtual Machine Wizard.</figcaption>\n</figure>\n\nWhen asked choose \"I will install the operating system later.\"\n\n<figure class=\"figure text-center col-xs-12 col-sm-12 col-lg-12\">\n <img src=\"/static/0d7e254f-af24-47cd-be8f-08eedb7aeaaa.png\" class=\"img-fluid\" alt=\"I will install the operating system later.\">\n<figcaption class=\"figure-caption text-center fw-normal text-dark\">I will install the operating system later.</figcaption>\n</figure>\n\nSet this new VM in your desired location and choose the name you wish for your VM\n\n<figure class=\"figure text-center col-xs-12 col-sm-12 col-lg-12\"> \n<img src=\"/static/d269f440-83d2-413a-a1d5-b50e8ab33fef.png\" class=\"img-fluid\" alt=\"Naming the machine BlackWidow through the New Virtual Machine Wizard\">\n<figcaption class=\"figure-caption text-center fw-normal text-dark\">Naming the machine BlackWidow through the New Virtual Machine Wizard.</figcaption>\n</figure>\n\n\nBefore finishing I like to customise the machine's hardware. For this machine, I am going to perform the following\n\n\n<figure class=\"figure text-center col-xs-12 col-sm-12 col-lg-12\"> \n<img src=\"/static/a9e02412-2cbe-473a-8cab-b30e69d5a07d.png\" class=\"img-fluid\" alt=\"New Virtual Machine Wizard - Customise Options\">\n<figcaption class=\"figure-caption text-center fw-normal text-dark\">New Virtual Machine Wizard - Customise Options.</figcaption>\n</figure>\n\n\n* Remove Printer\n* Remove Sound Card\n* Increase memory to 8GB\n* Go to \"Display\" and select \"Accelerate 3d Graphics\". Then change the Graphics memory to 1GB. \n* Under the CPU I will select the following checkboxes. \n  * Virutalize Intel VT-x/EPT or AMD-V/RVI\n  * Virtualize CPU Performance Counters\n  * Virtualize IOMMU (IO memory management unit)\n\n\nWith our machine installed our first job is to delete the brand new created virtual disk. \n\nEither go to the `Settings` or press CTRL` + `D` and remove the hardisk\n\n<figure class=\"figure text-center col-xs-12 col-sm-12 col-lg-12\"> \n<img src=\"/static/8a3dd6b1-6db2-48ba-9dd6-cccf8e6586b6.png\" class=\"img-fluid\" alt=\"Remove Hardrive from machine settings\">\n<figcaption class=\"figure-caption text-center fw-normal text-dark\">Remove Hardrive from machine settings.</figcaption>\n</figure>\n\nNow lets remove the harddrive from the physical disk. Remember the quick way to get to the folder is to right-click on the machine name and select \"Open VM directory\". With the folder open we can now see our new VM and all of its files. Open up the Virtual Machine by right clicking on it similar to earlier\n\n<figure class=\"figure text-center col-xs-12 col-sm-12 col-lg-12\"> \n<img src=\"/static/05d4c2f1-4f1b-4093-b9a4-4a28d1de2c2a.png\" class=\"img-fluid\" alt=\"Open VM Directory of new BlackWidow Machine\">\n<figcaption class=\"figure-caption text-center fw-normal text-dark\">Open VM Directory of new BlackWidow Machine.</figcaption>\n</figure>\n\n\nRemove the Hard disk, the file ending in `vmdk` from the folder. VM in workstation. \n\n\n<figure class=\"figure text-center col-xs-12 col-sm-12 col-lg-12\"> \n<img src=\"/static/4abdd554-77f8-4e9c-aaad-1ce982df7ff7.png\" class=\"img-fluid\" alt=\"Remove the BlackWidows.vmdk file from explorer\">\n<figcaption class=\"figure-caption text-center fw-normal text-dark\">Remove the BlackWidows.vmdk file from explorer.</figcaption>\n</figure>\n\n\nDelete the file from the hard drive \n\n<figure class=\"figure text-center col-xs-12 col-sm-12 col-lg-12\"> \n<img src=\"/static/e1ff1309-bdda-4c13-ba0f-bdaef6f9f371.png\" class=\"img-fluid\" alt=\"Remove the BlackWidows.vmdk file from explorer\">\n<figcaption class=\"figure-caption text-center fw-normal text-dark\">Remove the BlackWidows.vmdk file from explorer.</figcaption>\n</figure>\n\n\n\n\nNext we use the Virtual Disk Manager to rename the old hardrive and place it in the new location. \n\n<figure class=\"figure text-center col-xs-12 col-sm-12 col-lg-12\"> \n<img src=\"/static/727b3493-64b1-4206-b5df-4e4fa84ddb90.png\" class=\"img-fluid\" alt=\"Using the vmware-vdiskmanager.exe to rename and move old machines vmdk\">\n<figcaption class=\"figure-caption text-center fw-normal text-dark\">Using the vmware-vdiskmanager.exe to rename and move old machines vmdk.</figcaption>\n</figure>\n\n\n> Note: This will move the hard drive from the original folder. You might want to make a copy. \n\nNow all is left is to attach the hard drive. \n\nGot to settings `CTRL` + `D` and click \"Add\". Select Hard Disk.\n\n<figure class=\"figure text-center col-xs-12 col-sm-12 col-lg-12\"> \n<img src=\"/static/ec12321f-6996-4673-a974-11eccd2a86c1.png\" class=\"img-fluid\" alt=\"Add Hardware Wizard - Select Hard Disck and Click Next\">\n<figcaption class=\"figure-caption text-center fw-normal text-dark\">Add Hardware Wizard - Select Hard Disck and Click Next.</figcaption>\n</figure>\n\n\n<figure class=\"figure text-center col-xs-12 col-sm-12 col-lg-12\"> \n<img src=\"/static/6800f692-e604-40a1-8a06-bbdee9ff7904.png\" class=\"img-fluid\" alt=\"Add Hardware Wizard - Select Use an existing vitural disk\">\n<figcaption class=\"figure-caption text-center fw-normal text-dark\">Add Hardware Wizard - Select Use an existing vitural disk.</figcaption>\n</figure>\n\n\n\nChoose \"Use an existing virtual disk\". \n\n<figure class=\"figure text-center col-xs-12 col-sm-12 col-lg-12\"> \n<img src=\"/static/81aedfc6-cd7f-48b5-bf5f-e42774157a6c.png\" class=\"img-fluid\" alt=\"Add Hardware Wizard - Select Use an existing vitural disk\">\n<figcaption class=\"figure-caption text-center fw-normal text-dark\">Add Hardware Wizard - Select Use an existing vitural disk.</figcaption>\n</figure>\n\n\nSelect the disk you just created and click \"Finish\" \n\n<figure class=\"figure text-center col-xs-12 col-sm-12 col-lg-12\"> \n<img src=\"/static/996e9216-5c62-4fd9-9da4-cf27af2d52eb.png\" class=\"img-fluid\" alt=\"Add Hardware Wizard - Browser to newly created BlackWidow.vmdk\">\n<figcaption class=\"figure-caption text-center fw-normal text-dark\">Add Hardware Wizard - Browser to newly created BlackWidow.vmdk.</figcaption>\n</figure>\n\n\nYou can now delete the old folder that contained your machine Hard Disk and boot your new machine up."},"next":{"fields":{"slug":"/simple-network-management-protocol-snmp-introduction"},"excerpt":"SNMP stands for Simple Network Management Protocol. It is generally used by network monitoring applications to read and write network stateâ€¦","frontmatter":{"date":"19th January 2021 ","title":"Simple Network Management Protocol (SNMP) :- Introduction","description":"","tags":"snmp, snmpwalk, community-string","posttype":"tutorial"},"body":"SNMP stands for Simple Network Management Protocol. It is generally used by network monitoring applications to read and write network state variables\n(state of the interface, no. of sent packets etc.). Types of managed devices include servers, workstations and network devices.  \n  \nSNMP services run by default on the 161 UDP port.  \n  \nSNMP communications are generally protected by using an authentication string called community string. There are two types of community strings, a read-only\ncommunity string that gives us access to the general variables of the network and a read-write one, that also allows us to set specific variables.  \n  \nIf you can \"guess\" the read-only or read-write strings you can obtain quite a bit of access you would not normally have. In addition, if Windows based\ndevices are configured with SNMP, often times with the RO/RW community strings, you can extract patch levels, services running, last reboot times,\nusernames on the system, routes, and various other amounts of information that is valuable to an attacker.  \n  \nIf you can find a Cisco device running a private string for example, you can actually download the entire device configuration, modify it, and upload your\nown malicious config. Often the passwords themselves are level 7 encoded which means they are trivial to decode and obtain the â€˜enableâ€˜ or login password for\nthe specific device  \n  \nWhen querying through SNMP, there is what's called an MIB API. The MIB stands for the Management Information Base (MIB). This interface allows you to query\nthe device and extract information.  \n  \n  \nRFC MIB = http://www.oidview.com/mibs/0/HOST-RESOURCES-MIB.html  \n  \nVENDOR SPECIFIC = http://www.oidview.com/mibs/detail.html  \n  \nMICROSOFT = http://www.oidview.com/mibs/311/md-311-1.html  \n  \n```  \n1.3.6.1.2.1.25.1.6.0 System Processes  \n1.3.6.1.2.1.25.4.2.1.2 Running Programs  \n1.3.6.1.2.1.25.4.2.1.4 Processes Path  \n1.3.6.1.2.1.25.2.3.1.4 Storage Units  \n1.3.6.1.2.1.25.6.3.1.2 Software Name  \n1.3.6.1.4.1.77.1.2.25 User Accounts  \n1.3.6.1.2.1.6.13.1.3 TCP Local Ports  \n```\n\n## SNMPWalk\n\nSnmpwalk is a popular tool for testing SNMP. This tool acts as SNMP client, and we can use it for our penetration testing where we require making requests\nto the SNMP service on the target host.  \n  \n### Common Usage\n\nShows Help  \n```  \nsnmpwalk --help\n```  \n\nLooks at one host, specifying a community string of public  \n```  \nsnmpwalk -v 1 -c public 10.11.1.22\n```  \n\nHere we are asking snmpwalk to walk one node subset in the MIB  \n```  \nsnmpwalk -v 1 -c public 10.11.1.22 .1.3.6.1.2.1.25.1.6.0\n```  \n\n`-M` option allows us to include a file of MIB's to look throgh  \n```  \nsnmpwalk -v 1 -c public 10.11.1.22 -M mibs.txt\n```  \n\nSome MIB nodes display in hex, in order to force display of those in ASCI we add the -Oa options  \n```  \nsnmpwalk -v 1 -c public 10.11.1.73 iso.3.6.1.2.1.2.2.1.2 -Oa\n```  \n\nAdding the `n` to the `-O` option means it displays full OID's  \n```  \nsnmpwalk -v 1 -c public 10.11.1.73 iso.3.6.1.2.1.2.2.1.2 -Oan\n```  \n\nSearching snmpwalk for a specific MID string.  \n```  \nfor ip in $(cat out | cut -d\" \" -f1 | sort -u | grep \"10.11\"); do echo $ip ;\nsnmpwalk -c public -v1 $ip 1.3.6.1.2.1.25.4.2.1.2 ; done\n```  \n\nFiltering output of a lookup for a specific string  \n```  \nsnmpwalk -v 1 -c public 10.11.1.73 -Oa | grep \"iso.3.6.1.2.1.2.2.1.2\"\n```  \n\n### Important MIB's ID for Pentestesters\n\n#### Windows  \n  \n```\nRUNNING PROCESSES 1.3.6.1.2.1.25.4.2.1.2  \nINSTALLED SOFTWARE 1.3.6.1.2.1.25.6.3.1.2  \nSYSTEM INFO 1.3.6.1.2.1.1.1  \nHOSTNAME 1.3.6.1.2.1.1.5  \nDOMAIN 1.3.6.1.4.1.77.1.4.1  \nUPTIME 1.3.6.1.2.1.1.3  \nUSERS 1.3.6.1.4.1.77.1.2.25  \nSHARES 1.3.6.1.4.1.77.1.2.27  \nDISKS 1.3.6.1.2.1.25.2.3.1.3  \nSERVICES 1.3.6.1.4.1.77.1.2.3.1.1  \nLISTENING TCP PORTS 1.3.6.1.2.1.6.13.1.3.0.0.0.0  \nLISTENING UDP PORTS 1.3.6.1.2.1.7.5.1.2.0.0.0.0  \nSYSTEM PROCESSES 1.3.6.1.2.1.25.1.6.0  \nSTORAGE UNITS 1.3.6.1.2.1.25.2.3.1.4  \n```\n\n#### Linux\n\n```  \nRUNNING PROCESSES 1.3.6.1.2.1.25.4.2.1.2  \nSYSTEM INFO 1.3.6.1.2.1.1.1  \nHOSTNAME 1.3.6.1.2.1.1.5  \nUPTIME 1.3.6.1.2.1.1.3  \nMOUNTPOINTS 1.3.6.1.2.1.25.2.3.1.3  \nRUNNING SOFTWARE PATHS 1.3.6.1.2.1.25.4.2.1.4  \nLISTENING UDP PORTS 1.3.6.1.2.1.7.5.1.2.0.0.0.0  \nLISTENING TCP PORTS 1.3.6.1.2.1.6.13.1.3.0.0.0.0  \nSYSTEM PROCESSES 1.3.6.1.2.1.25.1.6.0  \nSTORAGE UNITS 1.3.6.1.2.1.25.2.3.1.4  \n```\n\n#### Cisco\n\n```\nLAST TERMINAL USERS 1.3.6.1.4.1.9.9.43.1.1.6.1.8  \nINTERFACES 1.3.6.1.2.1.2.2.1.2  \nSYSTEM INFO 1.3.6.1.2.1.1.1  \nHOSTNAME 1.3.6.1.2.1.1.5  \nSNMPcommunities 1.3.6.1.6.3.12.1.3.1.4  \nUPTIME 1.3.6.1.2.1.1.3  \nIP ADDRESSES 1.3.6.1.2.1.4.20.1.1  \nINTERFACE DESCRIPTIONS 1.3.6.1.2.1.31.1.1.1.18  \nHARDWARE 1.3.6.1.2.1.47.1.1.1.1.2  \nTACACS SERVER 1.3.6.1.4.1.9.2.1.5  \nLOGMESSAGES 1.3.6.1.4.1.9.9.41.1.2.3.1.5  \nPROCESSES 1.3.6.1.4.1.9.9.109.1.2.1.1.2  \nSNMP TRAP SERVER 1.3.6.1.6.3.12.1.2.1.7`\n```\n\n## snmp-check\n\n`snmp-check` allows you to enumerate the SNMP devices and places the output in a very human readable friendly format. It could be useful for \npenetration testing or systems monitoring.\n\n```\nsnmp-check -w ip_address\n-p, --port : SNMP port; default port is 161;\n-c, --community: SNMP community; default is public;\n-v, --version : SNMP version (1,2c); default is 1;\n-w, --write : detect write access (separate action by enumeration);\n-d, --disable_tcp : disable 'TCP\n```\n\n## snmpset\n\nIf we find write access to an SNMP server we can use snmpset to write to it.\n\n`snmpset` - communicates with a network entity using SNMP SET requests\n\n## Onesixtyone\n\nOnesixtyone is an SNMP scanner that sends multiple SNMP requests to multiple IP addresses, trying different community strings and waiting for replies.\n\nKey Features\n* Very fast scanning speed (over 50,000 guesses per second)\n* Scan a single host or thousands of hosts at the same time\n* You can tune scan speed to support both LAN and WAN testing\n\n### Prepping Your Dictionary\n\nSNMP strings in onesixtyone can't be longer than 16 characters at time of this writing. If you have an error with your dictionary file you can find out which words are causing problems with the following command.\n\n```  \ncat snmpstrings.txt | grep -xv .\\{0,16\\}\n```  \n\nThere is a current approve request in onesixtyone to increase the size as currently the following string which is default in the kali linux wordlists for snmp community strings can not be parsed for onesixtyone.\n\nThis is the APC default community string:\n```  \nTENmanUFactOryPOWER\n```  \n\nHowever if you wish to use onesixtyone and you need to filter your list down you can do the following to pipe all the words between 0-16 characters into a new list\n```  \ncat snmpstrings.txt | grep -x '.\\{0,16\\}' > snmp.txt\n```  \n\n### Example usage\n\nScanning Hosts/Community Strings From Files\n```\nonesixtyone -c snmp.txt -i opensnmp.txt \n-i = This flag allows you to input hosts from a list\n-c = This flag allows you to input community strings from a list.\n```\n\nScanning a single host.\n```  \nonesixtyone -c /dict/snmp.txt 10.0.0.1\n```  \n\n### Key Flags\n```  \n-c = file with community string names to try\n-i = file with target hosts\n-o = output log\n-d = debug mode\n-w = Wait in milliseconds between sending packets (default 10)\n-q = Quiet mode, do not print to std out.\n```  \n\nBrute Force And Scan Network SNMP bruteforce script.\n```\nroot@kali:/# echo \"public\" > community\nroot@kali:/# echo \"private\" > community\nroot@kali:/# echo \"manager\" > community\nroot@kali:/# for ip in $(seq 200 254); do echo 192.168.19.$ip ;done > ips.txt\nroot@kali:/# onesixtyone -c community -i ips.txt\n```\n\n## SNMP with NMAP\n\nThis is a standard network scan looking for potential snmp open port hosts.\n\n```bash\nnmap -Pn -sU -sV -p 161 --open 10.0.0.1/24\n-Pn = Treat all hosts as online \n-sU = Specifys a UDP Scan\n-p = Specify the port\n-sV = Specify to perform service enumeration\n--open = Returns on Open Ports\n```\n\nThis should hopefully tell us the version number of the SNMP. Now we can run nmap with scripts to further enumerate\n```  \nnmap -Pn -sU -p 161 10.0.0.1 --script=snmp-brute\n```  \n\n### NMAP NSE Scripts for SNMP\n\n```  \ncd \"/usr/share/nmap/scripts\"\nls -la | grep \"snmp\"\n```\n\n#### Flags\n\n```  \nsnmp-brute = Attempts to find an SNMP community string by brute force guessing\nsnmp-hh3c-logins = Attempts to enumerate Huawei / HP/H3C Locally Defined Users\nsnmp-info = Extracts basic information from an SNMPv3 GET request\nsnmp-interfaces = Attempts to enumerate network interfaces through SNMP\nsnmp-ios-config = Attempts to download Cisco router IOS configuration files\nsnmp-netstat = Attempts to query SNMP for a netstat like output\nsnmp-processes = Attempts to enumerate running processes through SNMP\nsnmp-sysdescr = Attempts to extract system information from an SNMP version 1 service\nsnmp-win32-services = Attempts to enumerate Windows services through SNMP\nsnmp-win32-shares = Attempts to enumerate Windows Shares through SNMP.\nsnmp-win32-software = Attempts to enumerate installed software through SNMP.\nsnmp-win32-users = Attempts to enumerate Windows user accounts through SNMP\n```"}}},"staticQueryHashes":["310218920"],"slicesMap":{}}