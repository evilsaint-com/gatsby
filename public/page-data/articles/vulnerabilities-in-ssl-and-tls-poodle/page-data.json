{"componentChunkName":"component---src-templates-blog-post-js","path":"/articles/vulnerabilities-in-ssl-and-tls-poodle/","result":{"pageContext":{"post":{"fields":{"slug":"/vulnerabilities-in-ssl-and-tls-poodle"},"excerpt":"Main Points Discovered by Google security team on October the 14th, 2014.The attack is on SSL 3.0 (SSLv3), an obsolete and insecure…","frontmatter":{"date":"18th January 2022 ","title":"Vulnerabilities in SSL & TLS :- POODLE","description":"In this article, we will look at CVE-2014-3566, also known as the Padding Oracle On Downgraded Legacy (POODLE) vulnerability, which results from support for SSL version 3.0. This attack requires a person-in-the-middle context to force the use of SSL v3.0, which contains an Oracle attack.","tags":"poodle, ssl, tls","posttype":"article"},"body":"## Main Points\n\n- Discovered by Google security team on October the 14th, 2014.\n- The attack is on SSL 3.0 (SSLv3), an obsolete and insecure protocol.\n- Attacker needs to somehow force the client and the server to agree to use the SSL 3.0 protocol. An attacker can do this by tampering with the SSL negotiation process.\n- SSL handshake will try to use the most recently supported version of TLS (starting with say TLS 1.2) at both the client and the server. However, for compatibility reasons, many clients have implemented a fallback mechanism that lets them retry a failed negotiation by using an older version. If an attacker interferes with the SSL negotiation process to disrupt it, the client will then fall back successively to TLS 1.1, TLS 1.0, and finally to SSL 3.0.\n- The vulnerability exploits the way the SSL version 3.0 handles padded bytes when used with Cipher Block Chaining (CBC) mode of operation.\n- Due to SSLv3's under-specification of the contents of the CBC padding bytes, and since SSLv3 did not say what the padding bytes should be, SSL implementations cannot check those padding bytes which opens SSLv3 up to an oracle attack.\n- This may allow a person-in-the-middle attacker to decrypt a selected byte of ciphertext.\n- To decrypt the stream requires as few as 256 SSL version 3 connections; however, they would need to force a victim application to repeatedly send the same data over a newly created SSL version 3.0 connection. This would require social engineering.\n- To exploit this as a web vulnerability, the attacker must possess the following:\n    1. The attacker must control the connection between the client and the server.\n    2. The attacker must be able to inject code into the victim's browser (e.g. JavaScript code) to launch the attack successfully.\n\n## Quick Reference\n\n### Description\n\nVia a person-in-the-middle position, the victim is forced to downgrade to SSL v3.0, which contains an oracle attack. Whether a server or a client - and you do not wish to fall short of this vulnerability - then disable support for SSL completely as per the remediation section. \n\n### Abbreviation\n\nPOODLE\n\n### Name\n\nPadding Oracle On Downgraded Legacy\n\n### CVE Number\n\nCVE-2014-3566\n\n### Type of Vulnerability\n\nA padding-oracle attack - The SSL protocol 3.0 uses nondeterministic CBC padding, which makes it easier for person-in-the-middle attackers to obtain cleartext data via a padding-oracle attack.\n\n### Affected\n\nThis vulnerability affects all SSL version 3.0 compliant products.\n\n### Remediation\n\nDo not Support SSL version 3 or lower.\n\nPlease note that this will break the website connection for IE6 users, should this browser be important for some reason. \n\n```bash\nFor Apache: SSLProtocol all -SSLv2 -SSLv3\nFor Nginx: ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n```\n\n## How to Configure Web Server to Mitigate POODLE Vulnerability\n\nTo protect our web server against [POODLE](https://evilsaint.com/article/vulnerabilities-ssl-tls-poodle/), it is recommended to stop support for SSL version 3.0 or lower. This, however, would still leave us vulnerable to [BEAST](https://evilsaint.com/article/vulnerabilities-ssl-tls-beast/), where it is recommended to stop support for TLS 1.0 as well. \n\n### Apache Web Server\n\nEdit the SSLProtocol directive in the ssl.conf file, which is usually located in /etc/httpd/conf.d/ssl.conf. For example, if you have:\n```\nSSLProtocol all\n```\n\nchange it to:\n```\nSSLProtocol TLSv1.1 TLSv1.2\n```\nThen, restart httpd.\n\n### NGINX\n\nEdit the ssl_protocols directive in the nginx.conf file. For example, if you have:\n```\nssl_protocols TLSv1.1 TLSv1.2;\n```\n\nchange it to:\n```\nssl_protocols TLSv1.1 TLSv1.2;\n```\n\nThen, restart nginx.\n\n### Microsoft IIS\n\nTo disable TLS 1.0 in Microsoft IIS, you must edit the registry settings in Microsoft Windows.\n\n1. Open the registry editor\n\t* Find the key `HKLM SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.0\\Server`\n\t* Change the DWORD value of the Enabled entry to `0`.\n\t* Create a `DisabledByDefault` entry and change the DWORD value to `1`.\n\n2. Repeat the above steps for all versions of SSL."},"prev":{"fields":{"slug":"/vulnerabilities-in-ssl-and-tls-poodle-over-tls"},"excerpt":"Main Points The attacker must use a different exploit to become a person-in-the-middle and to inject content into the network traffic…","frontmatter":{"date":"20th January 2022 ","title":"Vulnerabilities in SSL & TLS :- POODLE over TLS","description":"In this article, we will look at CVE-2014-8730, also known as the Padding Oracle On Downgraded Legacy Over Transport Layer Security (POODLE over TLS) vulnerability. The vulnerability is caused by a TLS server failing to verify the block cipher padding when used with a cipher suite utilising a block cipher, such as AES and DES. Due to the lack of padding checking, encrypted TLS traffic can be decrypted.","tags":"poodle-over-tls, ssl, tls","posttype":"article"},"body":"## Main Points\n\n- The attacker must use a different exploit to become a person-in-the-middle and to inject content into the network traffic stream for this attack to work.\n- Uses a padding-oracle attack in the CBC padding because of the vulnerable TLS implementation.\n\n## Quick Reference\n\n### Description\n\nThis is the POODLE attack; however, the writing over the CBC padding is possible due to TLS implementation not checking cipher padding. \n\n### Abbreviation\n\nPOODLE over TLS \n\n### Name\n\nPadding Oracle On Downgraded Legacy Over Transport Layer Security\n\n### CVE Number\n\nCVE-2014-8730\n\n### Type of Vulnerability\n\nThe vulnerability is caused by the TLS server failing to verify block cipher padding when used with a cipher suite that utilises a block cipher, such as AES and DES. Due to the lack of padding checking, encrypted TLS traffic can be decrypted.\n\n### Affected\n\nThe SSL profiles components in F5 BIG-IP LTM, APM, and ASM 10.0.0 through 10.2.4 and 11.0.0 through 11.5.1\nAAM 11.4.0 through 11.5.1, AFM 11.3.0 through 11.5.1, Analytics 11.0.0 through 11.5.1, Edge Gateway, WebAccelerator, and WOM 10.1.0 through 10.2.4 and 11.0.0 through 11.3.0, PEM 11.3.0 through 11.6.0, and PSM 10.0.0 through 10.2.4 and 11.0.0 through 11.4.1 and BIG-IQ Cloud and Security 4.0.0 through 4.4.0 and Device 4.2.0 through 4.4.0, when using TLS 1.x before TLS 1.2, does not properly check CBC padding bytes when terminating connections.\n\n### Remediation\n\nCheck CBC padding in TLS stack. \n\nPatch vulnerable TLS implementations (ask vendor)."},"next":{"fields":{"slug":"/vulnerabilities-in-ssl-and-tls-ccs-injection-vulnerability"},"excerpt":"Main Points A weakness exists within a certain version of OpenSSL that allows clients and servers to be forced via specifically specially…","frontmatter":{"date":"17th January 2022 ","title":"Vulnerabilities in SSL & TLS :- CCS injection vulnerability","description":"In this article, we will look at CVE Number CVE-2014-0224, also known as the CCS injection vulnerability. This vulnerability results from a flaw in certain versions of OpenSSL that allows an attacker to communicate using weak key material in the hope decrypting traffic later.","tags":"css-injection, openssl, ssl, tls","posttype":"article"},"body":"## Main Points\n\n- A weakness exists within a certain version of OpenSSL that allows clients and servers to be forced via specifically specially crafted handshake packet to use weak key material for communication.\n- Via a person-in-the-middle context an attacker maybe able to decrypt/modify traffic.\n\n## Quick Reference\n\n### Description\n\nA weakness in certain versions of OpenSSL that allows an attacker to use weak key material for communication with the hope decrypting traffic later. \n\n### Name\n\nCCS injection vulnerability\n\n### CVE Number\n\nCVE-2014-0224\n\n### Type of Vulnerability\n\nVulnerability in the OpenSSL library.\n\n### Affected\n\nOpenSSL versions said to be affected include:\n\n- Versions before 0.9.8za\n- 1.0.0 before 1.0.0m\n- 1.0.1 before 1.0.1h\n\n### Remediation\n\nUpgrade to a non-vulnerable version of the OpenSSL Library."}}},"staticQueryHashes":["310218920"],"slicesMap":{}}